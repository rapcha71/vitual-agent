# Dockerfile optimizado para Virtual Agent - Google Cloud Run
FROM node:18-alpine

# Instalar dependencias del sistema
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    cairo-dev \
    jpeg-dev \
    pango-dev \
    musl-dev \
    giflib-dev \
    pixman-dev \
    pangomm-dev \
    libjpeg-turbo-dev \
    freetype-dev

WORKDIR /app

# Instalar vite y typescript globalmente PRIMERO
RUN npm install -g vite@latest typescript@latest @vitejs/plugin-react

# Copiar archivos de package
COPY package*.json ./

# Instalar dependencias con configuración específica
RUN npm cache clean --force
RUN npm config set legacy-peer-deps true
RUN npm install --no-optional
RUN npm install vite @vitejs/plugin-react --save-dev

# Verificar que vite está instalado
RUN which vite || echo "Vite not in PATH"
RUN npm ls vite || echo "Vite not in local deps"
RUN vite --version || echo "Cannot run vite"

# Copiar archivos de configuración
COPY tsconfig*.json ./
COPY vite.config.ts ./
COPY tailwind.config.ts ./
COPY postcss.config.js ./
COPY drizzle.config.ts ./

# Copiar código fuente
COPY . .

# Verificar estructura
RUN ls -la
RUN ls -la node_modules/.bin/ | grep vite || echo "Vite binary not found"

# Build usando múltiples estrategias
RUN npm run build || npx vite build || ./node_modules/.bin/vite build

# Verificar build exitoso
RUN ls -la dist/
RUN test -f dist/index.html || (echo "Build failed - no index.html" && exit 1)

# Configurar para producción
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=8080

# Crear usuario no-root
RUN addgroup -g 1001 -S nodejs && \
    adduser -S virtual-agent -u 1001 -G nodejs

RUN chown -R virtual-agent:nodejs /app
USER virtual-agent

EXPOSE 8080

# Comando de inicio
CMD ["node", "dist/index.js"]